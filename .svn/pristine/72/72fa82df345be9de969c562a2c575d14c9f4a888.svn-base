<?php

class PageSeeker {
    const KEY_DIRS = 'dirs';
    const KEY_PAGES = 'files';
    
    const INFO_NS = 0;
    const INFO_DIR = 1;
    const INFO_FOLLOW = 2;
    
    private $config;
    private $info;
    private $follow;
 
     private function checkFollowPath($namespace, $level) {
        if ($this->info[$level-1][self::INFO_FOLLOW] && isset($this->follow[$level]) && ($this->follow[$level]==$namespace)) {
            $this->info[$level][self::INFO_FOLLOW] = true;
            return true;
        } else {
            return false;
        }
    }
    
    private function init() {
        $this->info = array();
        $this->info[1][self::INFO_NS] = $this->config->namespace;
        $this->info[1][self::INFO_DIR] = PageTools::getPageDirFromNamespace($this->config->baseDir, $this->config->namespace);
        $this->info[1][self::INFO_FOLLOW] = true;
        
        $this->follow = explode(PageTools::$NS_SEPARATOR, $this->config->followPath);
        array_unshift($this->follow, NULL);
    }
    
    private function addInfo($level, $dir) {
        $this->info[$level][self::INFO_NS] = PageTools::constructPageName($this->info[$level-1][self::INFO_NS], $dir);
        $this->info[$level][self::INFO_DIR] = $this->info[$level-1][self::INFO_DIR].'/'.$NS_SEPARATOR.$dir;
    }
    
   
    public function _get(SmartIndexConf $config) {
        $this->config = $config;
        $data = array();
        
        $this->init();
        $this->_search($data, 1);
    
        return $data;
    }
    
    private function _search(&$data, $level) {
        $namespace = $this->info[$level][self::INFO_NS];
        $data[$namespace][self::KEY_DIRS] = array();
        $data[$namespace][self::KEY_PAGES] = array();
        
        $pp =  $this->info[$level][self::INFO_DIR];
        $dh = @opendir($this->info[$level][self::INFO_DIR]);
        if (!$dh) return;
        
        while(($file = readdir($dh)) !== false){
            if(preg_match('/^[\._]/',$file)) continue;
            $filePath = $this->info[$level][self::INFO_DIR].'/'.$file;
            if(is_dir($filePath)){
                $data[$namespace][self::KEY_DIRS][] = $file;
                continue;
            }
            $pagename = PageTools::excludePageExtension($file);
            $data[$namespace][self::KEY_PAGES][] = $pagename;
        }
        closedir($dh);
        
        if (($level < $this->config->depth) || $this->info[$level][self::INFO_FOLLOW]) {
            foreach ($data[$namespace][self::KEY_DIRS] as $subdir) {
                $isFollow = $this->checkFollowPath($subdir, $level+1); 
                if (($level < $this->config->depth) || $isFollow) {
                    $this->addInfo($level+1, $subdir);
                    $this->_search($data, $level+1);    
                }
            }
        }
    }
            
}