function getParameterByName(url, name)
{
  name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
  var regexS = "[\\?&]" + name + "=([^&#]*)";
  var regex = new RegExp(regexS);
  var results = regex.exec(url);
  if(results == null)
    return "";
  else
    return decodeURIComponent(results[1].replace(/\+/g, " "));
}

function getSmartIndexConf(tree) {
        return window[jQuery(tree).attr('id')+'_conf'];
}

function SmartIndexOpenFolder2(event) {
        event.stopPropagation();
        var link = jQuery(this).children("a");
        
        if (link.parent().siblings("ul").length == 0) {
            if (link.parent().parent().hasClass("waiting")) {
                return false;
            }
            link.parent().parent().addClass("waiting");
            jQuery.post(event.data.url, {namespace: getParameterByName(link.attr('href'), 'idx'), depth: event.data.depth, theme: event.data.theme, action: 'subtree'}, function(data){
                link.parent().parent().append(data);
                
                var x = link.parents('li.namespace');
                var s = "";
                for (var i = 0; i < x.size(); i++) {
                    if (jQuery(x.get(i)).next('li').size() > 0) {
                        s = "<span class=\"necox\"></span>" + s;
                    } else {
                        s = "<span class=\"noline\"></span>" + s;
                    }
                }

                var y = link.parent().next('ul').find('li');
                jQuery.each(y, function(k, v){
                    jQuery(v).children('div').prepend(s);
                });
                
                
                
                link.parent().parent().removeClass("waiting");
            });
        }
        link.parent().parent().removeClass('closed').addClass('open');
        return false;
}

function SmartIndexOpenFolder(event) {
        event.stopPropagation();
        var link = jQuery(this).children("a");
        if (link.parent().siblings("ul").length == 0) {
            if (link.parent().parent().hasClass("waiting")) {
                return false;
            }
            link.parent().parent().addClass("waiting");
            jQuery.post(event.data.url, {namespace: getParameterByName(link.attr('href'), 'idx'), depth: event.data.depth, theme: event.data.theme, action: 'subtree'}, function(data){
                link.parent().parent().append(data);
                link.parent().parent().removeClass("waiting");
            });
        }
        link.parent().parent().removeClass('closed').addClass('open');
        return false;
}

function SmartIndexCloseFolder(event) {
    event.stopPropagation();
    jQuery(this).parent().removeClass('open').addClass('closed');
    return false;
}

function SmartIndexDivLink(event) {
        window.location = jQuery(this).children('a').attr('href');
        return false;
}

function SmartIndexHeadpage(event) {
        window.location = jQuery(this).attr('href');
        return false;
}



function initSmartIndexTree(tree) {
    var conf = getSmartIndexConf(tree);
    var id = jQuery(tree).attr('id');
    jQuery.each(conf.openActions, function(key, value){
        jQuery(tree).delegate('#'+id+' '+value.selector, value.event, conf, window[value.func]);
    });
   jQuery(tree).delegate('#'+id+' li.namespace > div', 'dblclick', function(){alert('hu');});
}

function initSmartIndex() {
    jQuery.each(jQuery('div.smartindex-treeview'), function(key, value){
        initSmartIndexTree(value);
    });
}

jQuery(function(){
    initSmartIndex();
});

(function($){

    var jg_events = new Object;
    
    function jg_createlist(items, id, classes, menuid) {
        var res = "<ul"+((classes != null)?(" class=\""+classes+"\""):"")+((id != null)?(" id=\""+id+"\""):"")+">";
        $.each(items, function(k, v){
            var itemid = menuid+"_"+v.id;
            var icon = (v.icon != null)?"<span class=\"icon "+v.icon+"\"></span>":"";
            if (v.separator) {
                res += "<li class=\"separator\"></li>";
            }
            else {
                res += "<li id=\""+itemid+"\""+((v.icon != null)?" class=\"icon\">"+icon:">")+"<div>"+v.text+"</div>";
                if (v.submenu != null) {res += jg_createlist(v.submenu, null, null, menuid);}
                res += "</li>";
                jg_events[itemid] = v.fn;
            }
        });

        res += "</ul>";
        return res;
    }

    function jg_buildContext(settings) {
        $('body').append(((settings.useWrapper)?"<div class=\"jeegoocontext-wrapper\">":"")+jg_createlist(settings.items, settings.id, "jeegoocontext cm_poch", settings.id)+((settings.useWrapper)?"</div>":""));
        //$('body').append(jg_createlist(settings.items, settings.id, "jeegoocontext cm_poch", settings.id));

        var all = {
            //livequery:true,
            widthOverflowOffset: 0,
            heightOverflowOffset: 3,
            submenuLeftOffset: -4,
            submenuTopOffset: 0,
            onShow: function (e, context){$(context).css('color', 'red');},
            onHide: function (e, context){$(context).css('color', 'blue');},
            onSelect: jg_handle
        };

        $.each(settings.selectors, function(key, value){
            all.event = value.event;
            $(value.selector).jg_contextmenu(settings.id, all);
        });
    }

    function jg_handle(e, context) {
        jg_events[jQuery(this).attr('id')](e, context);
    }

    function createNewPage(e, c)
    {
        jg_resetMenu();
        var namespace = getParameterByName($(c).children('a').attr('href'), 'idx');
        var name = prompt("Please enter page name","");
        if (name!=null && name!=""){
            window.location = DOKU_BASE+"doku.php?do=edit&rev=0&id="+namespace+":"+name;
        }
    }
    
    function searchInNamespace(e, c) {
        var namespace = getParameterByName($(c).children('a').attr('href'), 'idx');
        var query = prompt("Please enter page name","");
        if (query!=null && query!="") {
            window.location = DOKU_BASE+"doku.php?do=search&rev=0&id="+query+' @'+namespace;
        }
    }
    
    function showAcl(e, c) {
        var namespace = getParameterByName($(c).children('a').attr('href'), 'idx');
        window.location = DOKU_BASE+"doku.php?do=admin&page=acl&id="+namespace;
    }

    $(function() {
        var set = {
            "id" : "menu1", 
            "selectors" : [
                {"selector" : ".smartindex-treeview li.namespace>div", event : "contextmenu"},
            ],
            "items": [
                {id: "newpage", text : "new page", fn: createNewPage}, 
                {id: "search", text : "search", fn: searchInNamespace},
                {id: "acl", text : "acl", fn: showAcl},
            ]
        };

        jg_buildContext(set);
    });
})(jQuery);
    
