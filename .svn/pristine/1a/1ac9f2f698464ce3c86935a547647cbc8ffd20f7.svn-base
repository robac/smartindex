<?php

class PageSeeker {
    
    private $config;
    
    public function __construct() {
    }
    
    public function get(SmartIndexConf $config) {
        $this->config = $config;
        $data = array();
        
        if (auth_quickaclcheck(PageTools::constructPageName($this->config->namespace, "*")) >= AUTH_READ)
            $this->search($data, "", "", 1);
    
            return $data;
    }
    
    public function setFollowPath($path) {
        $this->followPath = $path;
    }
    
    private function isInFollowPath($namespace, $dir) {
        $completePath = PageTools::constructPageName($namespace, $dir);
        if (strpos($this->followPath, $completePath) === 0) {
            return true;
        } else {
            return false;
        }
    }

    private function search(&$data, $dir, $namespace, $level) {
        $data[$namespace]["dirs"] = array();
        $data[$namespace]["files"] = array();

        $dh = @opendir($this->config->baseDir.'/'.$dir);
        if(!$dh) return;
        
        while(($file = readdir($dh)) !== false){
            if(preg_match('/^[\._]/',$file)) continue;
            if(is_dir($this->config->baseDir.'/'.$dir.'/'.$file)){
                $pagex = ($namespace == "") ? $file.":*" : $namespace.":".$file.":*";
                if (auth_quickaclcheck($pagex)<AUTH_READ)
                    continue;
                $data[$namespace]["dirs"][] = $file;
                continue;
            }
            $pagename = PageTools::excludePageExtension($file);
            $page_ns = ($namespace == "") ? $file : $namespace.":".$file;
            if (auth_quickaclcheck($page_ns)>=AUTH_READ)
                $data[$namespace]["files"][] = $pagename;
        }
        
        closedir($dh);
        
        sort($data[$namespace]["dirs"]);
        sort($data[$namespace]["files"]);

        if (($level < $this->config->recursionLevel) || (!is_null($this->config->followPath))) {
            foreach ($data[$namespace]["dirs"] as $subdir) {
                if (($level < $this->config->recursionLevel) || $this->isInFollowPath($namespace, $subdir))
                $this->search($data, $dir.DIRECTORY_SEPARATOR.$subdir, PageTools::constructPageName($namespace, $subdir), $level+1);    
            }
        }
        
    }
            
}