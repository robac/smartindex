/*
 * SmartIndex initialization.
 */
jQuery(function(){
    si_init();
    neco();
});

/*
 * SmartIndex base functions.
 */

function si_init() {
    jQuery.each(jQuery("div.smartindex-treeview"), function(k, v){
        si_initTree(v);
    });
}

function si_initTree(tree) {
    var cnf = si_getTreeConf(tree);
    var $id = jQuery(tree).attr("id");
    jQuery.each(cnf.rawEvents, function(k, v){
        jQuery(tree).delegate("#"+$id+" "+v.selector, v.event, cnf, window[v.fn]);
    });
}

function si_getTreeConf(tree) {
    return window[jQuery(tree).attr("id")+"_conf"];
}

/*
 * SmartIndex default event handlers
 */

function si_default_openFolder(event) {
    if (event.data.beforeOpenFolder != null) 
        if (!window[event.data.beforeOpenFolder](event))
            return false;
   
    var $link = jQuery(this).children("a");
    var $li = jQuery(this).closest("li");
    
    if ($li.children("ul").length == 0) {
        if ($li.hasClass("waiting")) {
            return false;
        }
        $li.addClass("waiting");
        var ajaxData = 
            {
                "namespace" : url_getParameter($link.attr("href"), "idx"), 
                "depth"     : event.data.depth, 
                "theme"     : event.data.theme, 
                "action"    : "subtree"
            };
    
        if (event.data.beforeSubTreeLoad != null)
            window[event.data.beforeSubTreeLoad](event, ajaxData);
        
        jQuery.post(event.data.url, ajaxData, function(data){
            if (event.data.handleSubTreeLoad != null) {
                window[event.data.handleSubTreeLoad](event, data);
            } else {
                $li.append(data);
                $li.removeClass("waiting");
            }
        });
    }
    $li.removeClass("closed").addClass("open");
    
    if (event.data.afterOpenFolder != null) window[event.data.afterOpenFolder](event);
    
    return false;
}

function si_default_closeFolder(event) {
    if (event.data.beforeCloseFolder != null) 
       if (!window[event.data.beforeCloseFolder](event))
           return false;
    
    
    jQuery(this).parent().removeClass("open").addClass("closed");
    
    if (event.data.afterCloseFolder != null) window[event.data.afterCloseFolder](event);
    
    return false;
}

function si_default_openPage(event) {
    var $link = jQuery(this).children("a");
    window.location = $link.attr("href");
}

/*
 * SmartIndex dtree theme event handlers
 */

function si_dtree_handleSubTreeLoad(event, data) {
    var $div = jQuery(event.currentTarget);
    var $li = $div.parent();
    $li.append(data);

    var parentLis = $div.children("a").parents("li.namespace");
    var s = "";
    var cls = "";
    for (var i = parentLis.length; i > 0; i--) {
        if (jQuery(parentLis.get(i-1)).next("li").length > 0) {
            cls = "line";
        } else {
            cls = "noline";
        }
        s += "<span class=\""+cls+"\"></span>"
    }

    var ajaxLis = $div.next("ul").find("li");
    jQuery.each(ajaxLis, function(k, v){
        jQuery(v).children("div").prepend(s);
    });

    $li.removeClass("waiting");
}


function neco() {
    jQuery('body').append('<div id="testd"><input type="text" name="test" /></div>');
    jQuery("#testd").dialog(
        {
            closeOnEscape:true,
            modal:true,
            resizable: false, 
            title: "ahoj", 
            minHeight:0,
            autoOpen: false,
            show:"swing",    
            buttons:
                [
                    {
                        text:"cancel",
                        click: function() {jQuery(this).dialog("close"); return 110;}
                    }
                    , 
                    {text:"ok"}]});
    jQuery('.ui-dialog-titlebar').hide();
}

function neco2(event) {
    event.preventDefault();
    var x = jQuery("#testd").dialog('open');
    alert(x);
}

/*
 * Utils.
 */

/* Get value of URL parameter.
 * http://james.padolsey.com/javascript/bujs-1-getparameterbyname/
 */
function url_getParameter(url, name) {
    name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
    var regexS = "[\\?&]" + name + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(url);
    if (results == null) {
        return "";
    } else {
        return decodeURIComponent(results[1].replace(/\+/g, " "));
    }
}






(function($){

    var jg_events = new Object;
    
    function jg_createlist(items, id, classes, menuid) {
        var res = "<ul"+((classes != null)?(" class=\""+classes+"\""):"")+((id != null)?(" id=\""+id+"\""):"")+">";
        $.each(items, function(k, v){
            var itemid = menuid+"_"+v.id;
            var icon = (v.icon != null)?"<span class=\"icon "+v.icon+"\"></span>":"";
            if (v.separator) {
                res += "<li class=\"separator\"></li>";
            }
            else {
                res += "<li id=\""+itemid+"\""+((v.icon != null)?" class=\"icon\">"+icon:">")+"<div>"+v.text+"</div>";
                if (v.submenu != null) {res += jg_createlist(v.submenu, null, null, menuid);}
                res += "</li>";
                jg_events[itemid] = v.fn;
            }
        });

        res += "</ul>";
        return res;
    }

    function jg_buildContext(settings) {
        $("body").append(((settings.useWrapper)?"<div class=\"jeegoocontext-wrapper\">":"")+jg_createlist(settings.items, settings.id, "jeegoocontext cm_poch", settings.id)+((settings.useWrapper)?"</div>":""));

        var all = {
            widthOverflowOffset: 0,
            heightOverflowOffset: 3,
            submenuLeftOffset: -4,
            submenuTopOffset: 0,
            onShow: function (e, context){$(context).css("color", "red");},
            onHide: function (e, context){$(context).css("color", "blue");},
            onSelect: jg_handle
        };

        $.each(settings.selectors, function(key, value){
            all.event = value.event;
            $(value.selector).jg_contextmenu(settings.id, all);
        });
    }

    function jg_handle(e, context) {
        jg_events[jQuery(this).attr("id")](e, context);
    }

    function createNewPage(e, c) {
        jg_resetMenu();
        var namespace = url_getParameter($(c).children("a").attr("href"), "idx");
        var name = prompt("Please enter page name","");
        if (name!=null && name!=""){
            window.location = DOKU_BASE+"doku.php?do=edit&rev=0&id="+namespace+":"+name;
        }
    }
    
    function searchInNamespace(e, c) {
        var namespace = url_getParameter($(c).children("a").attr("href"), "idx");
        var query = prompt("Please enter page name","");
        if (query!=null && query!="") {
            window.location = DOKU_BASE+"doku.php?do=search&rev=0&id="+query+" @"+namespace;
        }
    }
    
    function showAcl(e, c) {
        var namespace = url_getParameter($(c).children("a").attr("href"), "idx");
        window.location = DOKU_BASE+"doku.php?do=admin&page=acl&id="+namespace;
    }

    $(function() {
        var set = {
            "id" : "menu1", 
            "selectors" : [
                {
                    "selector"  : ".smartindex-treeview li.namespace>div", 
                    event       : "contextmenu"
                },
            ],
            "items": [
                {
                    "id"    : "newpage", 
                    "text"  : "new page", 
                    "fn"    : createNewPage
                }, 
                {
                    "id"    : "search", 
                    "text"  : "search", 
                    "fn"    : searchInNamespace
                },
                {
                    "id "   : "acl", 
                    "text"  : "acl", 
                    "fn"    : showAcl
                },
            ]
        };

        jg_buildContext(set);
    });
})(jQuery);
    
