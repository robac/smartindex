<?php
class SmartIndexRenderer {
    private $useWrapper = true;
    private $wrapperClasses = array();
    private $wrapperId;
    
    private $config;
    
    
    public function setUseWrapper($use, $id = NULL) {
        $this->useWrapper = $use;
        
        $this->wrapperClasses[] = SmartIndexConf::TREE_CLASS;
        $this->wrapperClasses[] = $this->config->theme;
        if ($this->config->highlite) {
            $this->wrapperClasses[] = SmartIndexConf::HIGHLITE_CLASS;
        }
        
        $this->wrapperId = $id;
    }

    public function __construct(SmartIndexConf $config) {
        $this->config = $config;
    }
    
    public function render($data, &$document) {
        if ($this->useWrapper) {
            $document .= "<div".HtmlHelper::createIdClassesPart($this->wrapperId, $this->wrapperClasses).">";
        }
        
        //$document .= HtmlHelper::createHiddenInput("{'name' : 'John'}", "neco");
       
        $this->buildList($data, $this->config->namespace, $document);
        
        if ($this->useWrapper) {
            $document .= "</div>";
        }
    }
    
    private function buildList($data, $namespace, &$document) {
        if (!array_key_exists($namespace, $data))
                return "";
        
        if ($namespace != "") {
            $document .= "<ul>";
        } else {             
            $document .= "<ul>";
        }
         
        
        foreach($data[$namespace]["dirs"] as $key=>$dir)  {
            $classes = array("namespace");
            if (PageTools::isPathPart($this->config->followPath, PageTools::constructPageName($namespace, $dir))) {
                $classes[] = "open";
            } else {
                $classes[] = "closed";
            }
                
            $document .= "<li".HtmlHelper::createIdClassesPart(NULL, $classes)."><div>".HtmlHelper::createInternalLink($dir, array("idx"=>  PageTools::constructPageName($namespace, $dir)), $dir, NULL, NULL)."</div>";
            $this->buildList($data, PageTools::constructPageName($namespace, $dir), $document);
            $document .= "</li>";
        }
        
        
        foreach($data[$namespace]["files"] as $key=>$file) {
            $heading = p_get_first_heading($namespace.":".$file, false);
            if ($heading == "")
                $heading = $file;
            //$x =  date ("j.n.Y H:i:s.", $data[$namespace]["fm"][$key]);
            $document .= "<li".HtmlHelper::createIdClassesPart(NULL, array("page"))."><div>".HtmlHelper::createInternalLink(PageTools::constructPageName($namespace, $file), NULL, $heading, NULL, NULL)."</div ></li>";
        }
        
        $document .= "</ul>";
    }
}


?>
